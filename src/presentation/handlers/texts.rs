type StaticText = &'static str;

pub struct RegistrationTexts {
    pub start: StaticText,
    pub enter_full_name: StaticText,
    pub enter_group_name: StaticText,
    pub registration_complete: StaticText,
}

pub struct MeetingTexts {
    pub no_next_meeting: StaticText,
    pub accept_next_meeting: StaticText,
    pub accept_button: StaticText,
    pub after_accept: StaticText,
    pub reject_button: StaticText,
    pub after_reject: StaticText,
    pub current_meeting_header: StaticText,
}

impl MeetingTexts {
    pub fn current_meeting_text(&self, quest: &str, partner: &str) -> String {
        let header = self.current_meeting_header;
        format!("{header}\n\n–ü–∞—Ä—Ç–Ω—ë—Ä: @{partner}\n\n{quest}")
    }
}

pub struct Menu {
    pub text: StaticText,
    pub next_meeting_button: StaticText,
    pub current_meeting_button: StaticText,
    pub profile_button: StaticText,
    pub rules_button: StaticText,
}

pub struct AdminMenu {
    pub text: StaticText,
    pub users_button: StaticText,
    pub meetings_button: StaticText,
    pub users_query_header: StaticText,
}

impl AdminMenu {
    pub fn users_query_text(&self, usernames: &[&str]) -> String {
        usernames
            .iter()
            .fold(
                String::from(self.users_query_header), 
                |prev, cur| prev + "@" + cur + "\n"
            )
    }
}


pub struct Texts {
    pub registration: RegistrationTexts,
    pub meeting: MeetingTexts,
    pub menu: Menu,
    pub admin_menu: AdminMenu
}

pub const T: Texts = Texts {
    registration: RegistrationTexts {
        start: "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç, —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å –Ω–∞–º–∏ –Ω–∞ –æ–¥–Ω–æ–π –≤–æ–ª–Ω–µ! üèÑ‚Äç‚ôÇÔ∏è",
        enter_full_name: "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏ —Å–≤–æ—ë –§–ò–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –°–ú—É—Ä—Ñ–∏–∫ –°–ú—É—Ä—Ñ–æ–≤–∏—á –°–ú—É—Ä—Ñ–æ–≤",
        enter_group_name: "–¢–≤–æ—è —É—á–µ–±–Ω–∞—è –≥—Ä—É–ø–ø–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –°–ú11-11–ë",
        registration_complete: "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–ø–µ—Ä—å —Ç—ã —Ç–æ—á–Ω–æ —Å –Ω–∞–º–∏ ü•∞",
    },
    meeting: MeetingTexts {
        no_next_meeting: "–£–ø—Å, –∫–∞–∂–µ—Ç—Å—è, —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏ –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ :(",
        accept_next_meeting: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–µ",
        accept_button: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é ‚úÖ",
        after_accept: "–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–µ!",
        reject_button: "–ù–µ —Å–º–æ–≥—É —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å ‚ùå",
        after_reject: "–í—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç —É—á–∞—Å—Ç–∏—è –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á—É(",
        current_meeting_header: "–ó–∞–¥–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –≤—Å—Ç—Ä–µ—á—É",
    },
    menu: Menu {
        text: "–ú–µ–Ω—é",
        next_meeting_button: "–°–ª–µ–¥—É—é—â–∞—è –≤—Å—Ç—Ä–µ—á–∞ ‚ù§Ô∏è‚Äçü©π",
        current_meeting_button: "–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ üíå",
        profile_button: "–ü—Ä–æ—Ñ–∏–ª—å üßê",
        rules_button: "–ü—Ä–∞–≤–∏–ª–∞ ‚ùì",
    },
    admin_menu: AdminMenu {
        text: "–ú–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        users_button: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
        meetings_button: "–í—Å—Ç—Ä–µ—á–∏",
        users_query_header: "–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞",
    }
};
